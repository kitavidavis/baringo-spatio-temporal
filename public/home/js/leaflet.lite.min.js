/*! For license information please see georaster-layer-for-leaflet.lite.min.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("leaflet")):"function"==typeof define&&define.amd?define(["leaflet"],e):"object"==typeof exports?exports.GeoRasterLayer=e(require("leaflet")):t.GeoRasterLayer=e(t.L)}(self,(function(t){return(()=>{var e={771:function(t,e,r){var n;t=r.nmd(t),function(){var r,o,i,a,s,f,l,c,u,h,d,p,g,b,m,x,y,w,v,C,E,M,D,A,R,G,I,Q,O,k,S,B,T,F,L,j,N,P,H,Z,U,X,J,Y,W,K,V,q,z,_,$,tt,et,rt,nt,ot,it,at,st,ft,lt,ct,ut,ht,dt,pt,gt,bt,mt,xt,yt,wt,vt,Ct,Et,Mt,Dt,At,Rt,Gt,It=[].slice;Mt=function(){var t,e,r,n,o;for(t={},n=0,e=(o="Boolean Number String Function Array Date RegExp Undefined Null".split(" ")).length;n<e;n++)r=o[n],t["[object "+r+"]"]=r.toLowerCase();return function(e){var r;return r=Object.prototype.toString.call(e),t[r]||"object"}}(),V=function(t,e,r){return null==e&&(e=0),null==r&&(r=1),t<e&&(t=e),t>r&&(t=r),t},Dt=function(t){return t.length>=3?Array.prototype.slice.call(t):t[0]},E=function(t){var e,r;for(t._clipped=!1,t._unclipped=t.slice(0),e=r=0;r<3;e=++r)e<3?((t[e]<0||t[e]>255)&&(t._clipped=!0),t[e]<0&&(t[e]=0),t[e]>255&&(t[e]=255)):3===e&&(t[e]<0&&(t[e]=0),t[e]>1&&(t[e]=1));return t._clipped||delete t._unclipped,t},a=Math.PI,yt=Math.round,D=Math.cos,Q=Math.floor,nt=Math.pow,q=Math.log,vt=Math.sin,Ct=Math.sqrt,b=Math.atan2,$=Math.max,g=Math.abs,l=2*a,s=a/3,o=a/180,f=180/a,(C=function(){return arguments[0]instanceof r?arguments[0]:function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,arguments,(function(){}))}).default=C,p=[],null!==t&&null!=t.exports&&(t.exports=C),void 0===(n=function(){return C}.apply(e,[]))||(t.exports=n),C.version="1.4.1",d={},u=[],h=!1,r=function(){function t(){var t,e,r,n,o,i,a,s,f;for(i=this,e=[],s=0,n=arguments.length;s<n;s++)null!=(t=arguments[s])&&e.push(t);if(e.length>1&&(a=e[e.length-1]),null!=d[a])i._rgb=E(d[a](Dt(e.slice(0,-1))));else{for(h||(u=u.sort((function(t,e){return e.p-t.p})),h=!0),f=0,o=u.length;f<o&&!(a=(r=u[f]).test.apply(r,e));f++);a&&(i._rgb=E(d[a].apply(d,e)))}null==i._rgb&&console.warn("unknown format: "+e),null==i._rgb&&(i._rgb=[0,0,0]),3===i._rgb.length&&i._rgb.push(1)}return t.prototype.toString=function(){return this.hex()},t}(),C._input=d,C.brewer=w={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Viridis:["#440154","#482777","#3f4a8a","#31678e","#26838f","#1f9d8a","#6cce5a","#b6de2b","#fee825"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},function(){var t,e;for(t in e=[],w)e.push(w[t.toLowerCase()]=w[t])}(),C.colors=At={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflower:"#6495ed",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",laserlemon:"#ffff54",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrod:"#fafad2",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",maroon2:"#7f0000",maroon3:"#b03060",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",purple2:"#7f007f",purple3:"#a020f0",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},X=function(){var t,e,r,n,o,a,s;return n=(e=Dt(arguments))[0],t=e[1],r=e[2],a=(n+16)/116,o=isNaN(t)?a:a+t/500,s=isNaN(r)?a:a-r/200,a=i.Yn*J(a),o=i.Xn*J(o),s=i.Zn*J(s),[Gt(3.2404542*o-1.5371385*a-.4985314*s),Gt(-.969266*o+1.8760108*a+.041556*s),r=Gt(.0556434*o-.2040259*a+1.0572252*s),e.length>3?e[3]:1]},Gt=function(t){return 255*(t<=.00304?12.92*t:1.055*nt(t,1/2.4)-.055)},J=function(t){return t>i.t1?t*t*t:i.t2*(t-i.t0)},i={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},ut=function(){var t,e,r,n,o,i,a;return r=(n=Dt(arguments))[0],e=n[1],t=n[2],i=(o=bt(r,e,t))[0],[116*(a=o[1])-16,500*(i-a),200*(a-o[2])]},mt=function(t){return(t/=255)<=.04045?t/12.92:nt((t+.055)/1.055,2.4)},Rt=function(t){return t>i.t3?nt(t,1/3):t/i.t2+i.t0},bt=function(){var t,e,r,n;return r=(n=Dt(arguments))[0],e=n[1],t=n[2],r=mt(r),e=mt(e),t=mt(t),[Rt((.4124564*r+.3575761*e+.1804375*t)/i.Xn),Rt((.2126729*r+.7151522*e+.072175*t)/i.Yn),Rt((.0193339*r+.119192*e+.9503041*t)/i.Zn)]},C.lab=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["lab"]),(function(){}))},d.lab=X,r.prototype.lab=function(){return ut(this._rgb)},m=function(t){var e,r,n,o,i,a,s,f,l,c,u;return 2===(t=function(){var e,r,n;for(n=[],r=0,e=t.length;r<e;r++)o=t[r],n.push(C(o));return n}()).length?(l=function(){var e,r,n;for(n=[],r=0,e=t.length;r<e;r++)o=t[r],n.push(o.lab());return n}(),i=l[0],a=l[1],e=function(t){var e,r;return r=function(){var r,n;for(n=[],e=r=0;r<=2;e=++r)n.push(i[e]+t*(a[e]-i[e]));return n}(),C.lab.apply(C,r)}):3===t.length?(c=function(){var e,r,n;for(n=[],r=0,e=t.length;r<e;r++)o=t[r],n.push(o.lab());return n}(),i=c[0],a=c[1],s=c[2],e=function(t){var e,r;return r=function(){var r,n;for(n=[],e=r=0;r<=2;e=++r)n.push((1-t)*(1-t)*i[e]+2*(1-t)*t*a[e]+t*t*s[e]);return n}(),C.lab.apply(C,r)}):4===t.length?(u=function(){var e,r,n;for(n=[],r=0,e=t.length;r<e;r++)o=t[r],n.push(o.lab());return n}(),i=u[0],a=u[1],s=u[2],f=u[3],e=function(t){var e,r;return r=function(){var r,n;for(n=[],e=r=0;r<=2;e=++r)n.push((1-t)*(1-t)*(1-t)*i[e]+3*(1-t)*(1-t)*t*a[e]+3*(1-t)*t*t*s[e]+t*t*t*f[e]);return n}(),C.lab.apply(C,r)}):5===t.length&&(r=m(t.slice(0,3)),n=m(t.slice(2,5)),e=function(t){return t<.5?r(2*t):n(2*(t-.5))}),e},C.bezier=function(t){var e;return(e=m(t)).scale=function(){return C.scale(e)},e},C.cubehelix=function(t,e,r,n,o){var i,a,s;return null==t&&(t=300),null==e&&(e=-1.5),null==r&&(r=1),null==n&&(n=1),null==o&&(o=[0,1]),i=0,"array"===Mt(o)?a=o[1]-o[0]:(a=0,o=[o,o]),(s=function(s){var f,c,u,h,d;return f=l*((t+120)/360+e*s),h=nt(o[0]+a*s,n),c=(0!==i?r[0]+s*i:r)*h*(1-h)/2,u=D(f),d=vt(f),C(E([255*(h+c*(-.14861*u+1.78277*d)),255*(h+c*(-.29227*u-.90649*d)),255*(h+c*(1.97294*u)),1]))}).start=function(e){return null==e?t:(t=e,s)},s.rotations=function(t){return null==t?e:(e=t,s)},s.gamma=function(t){return null==t?n:(n=t,s)},s.hue=function(t){return null==t?r:("array"===Mt(r=t)?0==(i=r[1]-r[0])&&(r=r[1]):i=0,s)},s.lightness=function(t){return null==t?o:("array"===Mt(t)?(o=t,a=t[1]-t[0]):(o=[t,t],a=0),s)},s.scale=function(){return C.scale(s)},s.hue(r),s},C.random=function(){var t,e;for(t="#",e=0;e<6;++e)t+="0123456789abcdef".charAt(Q(16*Math.random()));return new r(t)},p=[],L=function(t,e,r,n){var o,i,a,s;for(null==r&&(r=.5),null==n&&(n="rgb"),"object"!==Mt(t)&&(t=C(t)),"object"!==Mt(e)&&(e=C(e)),a=0,i=p.length;a<i;a++)if(n===(o=p[a])[0]){s=o[1](t,e,r,n);break}if(null==s)throw"color mode "+n+" is not supported";return s.alpha(t.alpha()+r*(e.alpha()-t.alpha()))},C.interpolate=L,r.prototype.interpolate=function(t,e,r){return L(this,t,e,r)},C.mix=L,r.prototype.mix=r.prototype.interpolate,d.rgb=function(){var t,e,r,n;for(t in r=[],e=Dt(arguments))n=e[t],r.push(n);return r},C.rgb=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["rgb"]),(function(){}))},r.prototype.rgb=function(t){return null==t&&(t=!0),t?this._rgb.map(Math.round).slice(0,3):this._rgb.slice(0,3)},r.prototype.rgba=function(t){return null==t&&(t=!0),t?[Math.round(this._rgb[0]),Math.round(this._rgb[1]),Math.round(this._rgb[2]),this._rgb[3]]:this._rgb.slice(0)},u.push({p:3,test:function(t){var e;return e=Dt(arguments),"array"===Mt(e)&&3===e.length||4===e.length&&"number"===Mt(e[3])&&e[3]>=0&&e[3]<=1?"rgb":void 0}}),d.lrgb=d.rgb,P=function(t,e,n,o){var i,a;return i=t._rgb,a=e._rgb,new r(Ct(nt(i[0],2)*(1-n)+nt(a[0],2)*n),Ct(nt(i[1],2)*(1-n)+nt(a[1],2)*n),Ct(nt(i[2],2)*(1-n)+nt(a[2],2)*n),o)},c=function(t){var e,n,o,i,a;for(e=1/t.length,a=[0,0,0,0],o=0,n=t.length;o<n;o++)i=t[o]._rgb,a[0]+=nt(i[0],2)*e,a[1]+=nt(i[1],2)*e,a[2]+=nt(i[2],2)*e,a[3]+=i[3]*e;return a[0]=Ct(a[0]),a[1]=Ct(a[1]),a[2]=Ct(a[2]),a[3]>1&&(a[3]=1),new r(E(a))},p.push(["lrgb",P]),C.average=function(t,e){var r,n,o,i,s,f,l,u,h,d,p,g,m;if(null==e&&(e="rgb"),h=t.length,l=(t=t.map((function(t){return C(t)}))).splice(0,1)[0],"lrgb"===e)return c(t);for(u in i=[],s=0,f=0,g=l.get(e))g[u]=g[u]||0,i.push(isNaN(g[u])?0:1),"h"!==e.charAt(u)||isNaN(g[u])||(r=g[u]/180*a,s+=D(r),f+=vt(r));for(n=l.alpha(),p=0,d=t.length;p<d;p++)for(u in m=(o=t[p]).get(e),n+=o.alpha(),g)isNaN(m[u])||(i[u]+=1,"h"===e.charAt(u)?(r=m[u]/180*a,s+=D(r),f+=vt(r)):g[u]+=m[u]);for(u in g)if("h"===e.charAt(u)){for(r=b(f/i[u],s/i[u])/a*180;r<0;)r+=360;for(;r>=360;)r-=360;g[u]=r}else g[u]=g[u]/i[u];return C(g,e).alpha(n/h)},k=function(t){var e,r;if(t.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return 4!==t.length&&7!==t.length||(t=t.substr(1)),3===t.length&&(t=(t=t.split(""))[0]+t[0]+t[1]+t[1]+t[2]+t[2]),[(r=parseInt(t,16))>>16,r>>8&255,255&r,1];if(t.match(/^#?([A-Fa-f0-9]{8})$/))return 9===t.length&&(t=t.substr(1)),[(r=parseInt(t,16))>>24&255,r>>16&255,r>>8&255,yt((255&r)/255*100)/100];if(null!=d.css&&(e=d.css(t)))return e;throw"unknown color: "+t},st=function(t,e){var r,n,o,i,a,s;return null==e&&(e="auto"),a=t[0],o=t[1],n=t[2],r=t[3],"auto"===e&&(e=r<1?"rgba":"rgb"),a=Math.round(a),o=Math.round(o),n=Math.round(n),s=(s="000000"+(a<<16|o<<8|n).toString(16)).substr(s.length-6),i=(i="0"+yt(255*r).toString(16)).substr(i.length-2),"#"+function(){switch(e.toLowerCase()){case"rgba":return s+i;case"argb":return i+s;default:return s}}()},d.hex=function(t){return k(t)},C.hex=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["hex"]),(function(){}))},r.prototype.hex=function(t){return null==t&&(t="auto"),st(this._rgb,t)},u.push({p:4,test:function(t){if(1===arguments.length&&"string"===Mt(t))return"hex"}}),T=function(){var t,e,r,n,o,i,a,s,f,l,c,u,h,d;if(o=(t=Dt(arguments))[0],c=t[1],a=t[2],0===c)f=n=e=255*a;else{for(r=[0,0,0],u=2*a-(h=a<.5?a*(1+c):a+c-a*c),(d=[0,0,0])[0]=(o/=360)+1/3,d[1]=o,d[2]=o-1/3,i=s=0;s<=2;i=++s)d[i]<0&&(d[i]+=1),d[i]>1&&(d[i]-=1),6*d[i]<1?r[i]=u+6*(h-u)*d[i]:2*d[i]<1?r[i]=h:3*d[i]<2?r[i]=u+(h-u)*(2/3-d[i])*6:r[i]=u;f=(l=[yt(255*r[0]),yt(255*r[1]),yt(255*r[2])])[0],n=l[1],e=l[2]}return t.length>3?[f,n,e,t[3]]:[f,n,e]},lt=function(t,e,r){var n,o,i,a,s;return void 0!==t&&t.length>=3&&(t=(a=t)[0],e=a[1],r=a[2]),t/=255,e/=255,r/=255,i=Math.min(t,e,r),o=(($=Math.max(t,e,r))+i)/2,$===i?(s=0,n=Number.NaN):s=o<.5?($-i)/($+i):($-i)/(2-$-i),t===$?n=(e-r)/($-i):e===$?n=2+(r-t)/($-i):r===$&&(n=4+(t-e)/($-i)),(n*=60)<0&&(n+=360),[n,s,o]},C.hsl=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["hsl"]),(function(){}))},d.hsl=T,r.prototype.hsl=function(){return lt(this._rgb)},F=function(){var t,e,r,n,o,i,a,s,f,l,c,u,h,d,p,g,b,m;if(o=(t=Dt(arguments))[0],g=t[1],m=t[2],m*=255,0===g)f=n=e=m;else switch(360===o&&(o=0),o>360&&(o-=360),o<0&&(o+=360),a=m*(1-g),s=m*(1-g*(r=(o/=60)-(i=Q(o)))),b=m*(1-g*(1-r)),i){case 0:f=(l=[m,b,a])[0],n=l[1],e=l[2];break;case 1:f=(c=[s,m,a])[0],n=c[1],e=c[2];break;case 2:f=(u=[a,m,b])[0],n=u[1],e=u[2];break;case 3:f=(h=[a,s,m])[0],n=h[1],e=h[2];break;case 4:f=(d=[b,a,m])[0],n=d[1],e=d[2];break;case 5:f=(p=[m,a,s])[0],n=p[1],e=p[2]}return[f,n,e,t.length>3?t[3]:1]},ct=function(){var t,e,r,n,o,i,a,s,f;return i=(a=Dt(arguments))[0],r=a[1],t=a[2],o=Math.min(i,r,t),e=($=Math.max(i,r,t))-o,f=$/255,0===$?(n=Number.NaN,s=0):(s=e/$,i===$&&(n=(r-t)/e),r===$&&(n=2+(t-i)/e),t===$&&(n=4+(i-r)/e),(n*=60)<0&&(n+=360)),[n,s,f]},C.hsv=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["hsv"]),(function(){}))},d.hsv=F,r.prototype.hsv=function(){return ct(this._rgb)},et=function(t){return"number"===Mt(t)&&t>=0&&t<=16777215?[t>>16,t>>8&255,255&t,1]:(console.warn("unknown num color: "+t),[0,0,0,1])},pt=function(){var t;return((t=Dt(arguments))[0]<<16)+(t[1]<<8)+t[2]},C.num=function(t){return new r(t,"num")},r.prototype.num=function(t){return null==t&&(t="rgb"),pt(this._rgb,t)},d.num=et,u.push({p:1,test:function(t){if(1===arguments.length&&"number"===Mt(t)&&t>=0&&t<=16777215)return"num"}}),O=function(){var t,e,r,n,o,i,a,s,f,l,c,u,h,d,p,g,b,m,x,y;if(s=(r=Dt(arguments))[0],o=r[1],e=r[2],a=a/100*255,t=255*(o/=100),0===o)u=a=n=e;else switch(360===s&&(s=0),s>360&&(s-=360),s<0&&(s+=360),c=(l=e*(1-o))+t*(1-(i=(s/=60)-(f=Q(s)))),x=l+t*i,y=l+t,f){case 0:u=(h=[y,x,l])[0],a=h[1],n=h[2];break;case 1:u=(d=[c,y,l])[0],a=d[1],n=d[2];break;case 2:u=(p=[l,y,x])[0],a=p[1],n=p[2];break;case 3:u=(g=[l,c,y])[0],a=g[1],n=g[2];break;case 4:u=(b=[x,l,y])[0],a=b[1],n=b[2];break;case 5:u=(m=[y,l,c])[0],a=m[1],n=m[2]}return[u,a,n,r.length>3?r[3]:1]},at=function(){var t,e,r,n,o,i,a,s,f;return s=(f=Dt(arguments))[0],o=f[1],e=f[2],a=Math.min(s,o,e),r=100*(n=($=Math.max(s,o,e))-a)/255,t=a/(255-n)*100,0===n?i=Number.NaN:(s===$&&(i=(o-e)/n),o===$&&(i=2+(e-s)/n),e===$&&(i=4+(s-o)/n),(i*=60)<0&&(i+=360)),[i,r,t]},C.hcg=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["hcg"]),(function(){}))},d.hcg=O,r.prototype.hcg=function(){return at(this._rgb)},A=function(t){var e,r,n,o,i,a,s,f;if(t=t.toLowerCase(),null!=C.colors&&C.colors[t])return k(C.colors[t]);if(i=t.match(/rgb\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*\)/)){for(s=i.slice(1,4),o=a=0;a<=2;o=++a)s[o]=+s[o];s[3]=1}else if(i=t.match(/rgba\(\s*(\-?\d+),\s*(\-?\d+)\s*,\s*(\-?\d+)\s*,\s*([01]|[01]?\.\d+)\)/))for(s=i.slice(1,5),o=f=0;f<=3;o=++f)s[o]=+s[o];else if(i=t.match(/rgb\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/)){for(s=i.slice(1,4),o=e=0;e<=2;o=++e)s[o]=yt(2.55*s[o]);s[3]=1}else if(i=t.match(/rgba\(\s*(\-?\d+(?:\.\d+)?)%,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/)){for(s=i.slice(1,5),o=r=0;r<=2;o=++r)s[o]=yt(2.55*s[o]);s[3]=+s[3]}else(i=t.match(/hsl\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*\)/))?((n=i.slice(1,4))[1]*=.01,n[2]*=.01,(s=T(n))[3]=1):(i=t.match(/hsla\(\s*(\-?\d+(?:\.\d+)?),\s*(\-?\d+(?:\.\d+)?)%\s*,\s*(\-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)/))&&((n=i.slice(1,4))[1]*=.01,n[2]*=.01,(s=T(n))[3]=+i[4]);return s},it=function(t){var e;return"rgb"==(e=t[3]<1?"rgba":"rgb")?e+"("+t.slice(0,3).map(yt).join(",")+")":"rgba"===e?e+"("+t.slice(0,3).map(yt).join(",")+","+t[3]+")":void 0},xt=function(t){return yt(100*t)/100},B=function(t,e){var r;return r=e<1?"hsla":"hsl",t[0]=xt(t[0]||0),t[1]=xt(100*t[1])+"%",t[2]=xt(100*t[2])+"%","hsla"===r&&(t[3]=e),r+"("+t.join(",")+")"},d.css=function(t){return A(t)},C.css=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["css"]),(function(){}))},r.prototype.css=function(t){return null==t&&(t="rgb"),"rgb"===t.slice(0,3)?it(this._rgb):"hsl"===t.slice(0,3)?B(this.hsl(),this.alpha()):void 0},d.named=function(t){return k(At[t])},u.push({p:5,test:function(t){if(1===arguments.length&&null!=At[t])return"named"}}),r.prototype.name=function(t){var e,r;for(r in arguments.length&&(At[t]&&(this._rgb=k(At[t])),this._rgb[3]=1),e=this.hex("rgb"),At)if(e===At[r])return r;return e},Y=function(){var t,e,r,n;return r=(n=Dt(arguments))[0],t=n[1],e=n[2],[r,D(e*=o)*t,vt(e)*t]},W=function(){var t,e,r,n,o,i,a,s,f;return a=(r=Dt(arguments))[0],o=r[1],i=r[2],t=(s=Y(a,o,i))[0],e=s[1],n=s[2],[(f=X(t,e,n))[0],f[1],n=f[2],r.length>3?r[3]:1]},U=function(){var t,e,r,n,o,i;return o=(i=Dt(arguments))[0],t=i[1],e=i[2],r=Ct(t*t+e*e),n=(b(e,t)*f+360)%360,0===yt(1e4*r)&&(n=Number.NaN),[o,r,n]},ht=function(){var t,e,r,n,o,i,a;return o=(i=Dt(arguments))[0],r=i[1],e=i[2],n=(a=ut(o,r,e))[0],t=a[1],e=a[2],U(n,t,e)},C.lch=function(){var t;return t=Dt(arguments),new r(t,"lch")},C.hcl=function(){var t;return t=Dt(arguments),new r(t,"hcl")},d.lch=W,d.hcl=function(){var t,e,r,n;return e=(n=Dt(arguments))[0],t=n[1],r=n[2],W([r,t,e])},r.prototype.lch=function(){return ht(this._rgb)},r.prototype.hcl=function(){return ht(this._rgb).reverse()},ot=function(t){var e,r,n,o,i,a;return null==t&&(t="rgb"),i=(a=Dt(arguments))[0],n=a[1],e=a[2],n/=255,e/=255,[(1-(i/=255)-(o=1-Math.max(i,Math.max(n,e))))*(r=o<1?1/(1-o):0),(1-n-o)*r,(1-e-o)*r,o]},M=function(){var t,e,r,n,o,i;return r=(e=Dt(arguments))[0],o=e[1],i=e[2],n=e[3],t=e.length>4?e[4]:1,1===n?[0,0,0,t]:[r>=1?0:255*(1-r)*(1-n),o>=1?0:255*(1-o)*(1-n),i>=1?0:255*(1-i)*(1-n),t]},d.cmyk=function(){return M(Dt(arguments))},C.cmyk=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["cmyk"]),(function(){}))},r.prototype.cmyk=function(){return ot(this._rgb)},d.gl=function(){var t,e,r,n,o;for(n=function(){var t,r;for(e in r=[],t=Dt(arguments))o=t[e],r.push(o);return r}.apply(this,arguments),t=r=0;r<=2;t=++r)n[t]*=255;return n},C.gl=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["gl"]),(function(){}))},r.prototype.gl=function(){var t;return[(t=this._rgb)[0]/255,t[1]/255,t[2]/255,t[3]]},dt=function(t,e,r){var n;return t=(n=Dt(arguments))[0],e=n[1],r=n[2],.2126*(t=z(t))+.7152*(e=z(e))+.0722*z(r)},z=function(t){return(t/=255)<=.03928?t/12.92:nt((t+.055)/1.055,2.4)},Z=function(t,e,n,o){var i,a;return i=t._rgb,a=e._rgb,new r(i[0]+n*(a[0]-i[0]),i[1]+n*(a[1]-i[1]),i[2]+n*(a[2]-i[2]),o)},p.push(["rgb",Z]),r.prototype.luminance=function(t,e){var r,n,o,i,a;return null==e&&(e="rgb"),arguments.length?(i=this._rgb,0===t?i=[0,0,0,this._rgb[3]]:1===t?i=[255,255,255,this[3]]:(r=dt(this._rgb),n=1e-7,o=20,a=function(r,i){var s,f;return s=(f=r.interpolate(i,.5,e)).luminance(),Math.abs(t-s)<n||!o--?f:s>t?a(r,f):a(f,i)},i=r>t?a(C("black"),this).rgba():a(this,C("white")).rgba()),C(i).alpha(this.alpha())):dt(this._rgb)},Et=function(t){var e,r,n,o;return(o=t/100)<66?(n=255,r=-155.25485562709179-.44596950469579133*(r=o-2)+104.49216199393888*q(r),e=o<20?0:.8274096064007395*(e=o-10)-254.76935184120902+115.67994401066147*q(e)):(n=351.97690566805693+.114206453784165*(n=o-55)-40.25366309332127*q(n),r=325.4494125711974+.07943456536662342*(r=o-50)-28.0852963507957*q(r),e=255),[n,r,e]},gt=function(){var t,e,r,n,o,i,a,s;for(o=(i=Dt(arguments))[0],i[1],t=i[2],n=1e3,r=4e4,e=.4;r-n>e;)(a=Et(s=.5*(r+n)))[2]/a[0]>=t/o?r=s:n=s;return yt(s)},C.temperature=C.kelvin=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["temperature"]),(function(){}))},d.temperature=d.kelvin=d.K=Et,r.prototype.temperature=function(){return gt(this._rgb)},r.prototype.kelvin=r.prototype.temperature,C.contrast=function(t,e){var n,o,i,a;return"string"!==(i=Mt(t))&&"number"!==i||(t=new r(t)),"string"!==(a=Mt(e))&&"number"!==a||(e=new r(e)),(n=t.luminance())>(o=e.luminance())?(n+.05)/(o+.05):(o+.05)/(n+.05)},C.distance=function(t,e,n){var o,i,a,s,f,l,c;for(i in null==n&&(n="lab"),"string"!==(f=Mt(t))&&"number"!==f||(t=new r(t)),"string"!==(l=Mt(e))&&"number"!==l||(e=new r(e)),a=t.get(n),s=e.get(n),c=0,a)c+=(o=(a[i]||0)-(s[i]||0))*o;return Math.sqrt(c)},C.deltaE=function(t,e,n,o){var i,s,f,l,c,u,h,d,p,m,x,y,w,v,C,E,M,A,R,G,I,Q,O,k;for(null==n&&(n=1),null==o&&(o=1),"string"!==(C=Mt(t))&&"number"!==C||(t=new r(t)),"string"!==(E=Mt(e))&&"number"!==E||(e=new r(e)),i=(M=t.lab())[0],f=M[1],c=M[2],s=(A=e.lab())[0],l=A[1],u=A[2],h=Ct(f*f+c*c),d=Ct(l*l+u*u),G=i<16?.511:.040975*i/(1+.01765*i),R=.0638*h/(1+.0131*h)+.638,v=h<1e-6?0:180*b(c,f)/a;v<0;)v+=360;for(;v>=360;)v-=360;return I=v>=164&&v<=345?.56+g(.2*D(a*(v+168)/180)):.36+g(.4*D(a*(v+35)/180)),w=Ct((p=h*h*h*h)/(p+1900)),Ct((Q=(i-s)/(n*G))*Q+(O=(y=h-d)/(o*R))*O+((m=f-l)*m+(x=c-u)*x-y*y)/((k=R*(w*I+1-w))*k))},r.prototype.get=function(t){var e,r,n,o,i;return n=(o=t.split("."))[0],e=o[1],i=this[n](),e?(r=n.indexOf(e))>-1?i[r]:console.warn("unknown channel "+e+" in mode "+n):i},r.prototype.set=function(t,e){var r,n,o,i,a;if(o=(i=t.split("."))[0],r=i[1])if(a=this[o](),(n=o.indexOf(r))>-1)if("string"===Mt(e))switch(e.charAt(0)){case"+":case"-":a[n]+=+e;break;case"*":a[n]*=+e.substr(1);break;case"/":a[n]/=+e.substr(1);break;default:a[n]=+e}else a[n]=e;else console.warn("unknown channel "+r+" in mode "+o);else a=e;return C(a,o).alpha(this.alpha())},r.prototype.clipped=function(){return this._rgb._clipped||!1},r.prototype.alpha=function(t){return arguments.length?C.rgb([this._rgb[0],this._rgb[1],this._rgb[2],t]):this._rgb[3]},r.prototype.darken=function(t){var e;return null==t&&(t=1),(e=this.lab())[0]-=i.Kn*t,C.lab(e).alpha(this.alpha())},r.prototype.brighten=function(t){return null==t&&(t=1),this.darken(-t)},r.prototype.darker=r.prototype.darken,r.prototype.brighter=r.prototype.brighten,r.prototype.saturate=function(t){var e;return null==t&&(t=1),(e=this.lch())[1]+=t*i.Kn,e[1]<0&&(e[1]=0),C.lch(e).alpha(this.alpha())},r.prototype.desaturate=function(t){return null==t&&(t=1),this.saturate(-t)},r.prototype.premultiply=function(){var t,e;return e=this.rgb(),t=this.alpha(),C(e[0]*t,e[1]*t,e[2]*t,t)},tt=function(t,e){return t*e/255},R=function(t,e){return t>e?e:t},K=function(t,e){return t>e?t:e},wt=function(t,e){return 255*(1-(1-t/255)*(1-e/255))},rt=function(t,e){return e<128?2*t*e/255:255*(1-2*(1-t/255)*(1-e/255))},v=function(t,e){return 255*(1-(1-e/255)/(t/255))},G=function(t,e){return 255===t||(t=e/255*255/(1-t/255))>255?255:t},(x=function(t,e,r){if(!x[r])throw"unknown blend mode "+r;return x[r](t,e)}).normal=(y=function(t){return function(e,r){var n,o;return n=C(r).rgb(),o=C(e).rgb(),C(t(n,o),"rgb")}})((I=function(t){return function(e,r){var n,o,i;for(i=[],n=o=0;o<=3;n=++o)i[n]=t(e[n],r[n]);return i}})((function(t,e){return t}))),x.multiply=y(I(tt)),x.screen=y(I(wt)),x.overlay=y(I(rt)),x.darken=y(I(R)),x.lighten=y(I(K)),x.dodge=y(I(G)),x.burn=y(I(v)),C.blend=x,C.analyze=function(t){var e,r,n,o;for(n={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},r=0,e=t.length;r<e;r++)null==(o=t[r])||isNaN(o)||(n.values.push(o),n.sum+=o,o<n.min&&(n.min=o),o>n.max&&(n.max=o),n.count+=1);return n.domain=[n.min,n.max],n.limits=function(t,e){return C.limits(n,t,e)},n},C.scale=function(t,e){var r,n,o,i,a,s,f,l,c,u,h,d,p,g,b,m,x,y,w,v,E;return c="rgb",u=C("#ccc"),g=0,a=[0,1],p=[],d=[0,0],r=!1,o=[],h=!1,l=0,f=1,i=!1,n={},b=!0,s=1,v=function(t){var e,r,n,i,a,s;if(null==t&&(t=["#fff","#000"]),null!=t&&"string"===Mt(t)&&null!=C.brewer&&(t=C.brewer[t]||C.brewer[t.toLowerCase()]||t),"array"===Mt(t)){for(1===t.length&&(t=[t[0],t[0]]),e=n=0,i=(t=t.slice(0)).length-1;0<=i?n<=i:n>=i;e=0<=i?++n:--n)r=t[e],"string"===Mt(r)&&(t[e]=C(r));for(p.length=0,e=s=0,a=t.length-1;0<=a?s<=a:s>=a;e=0<=a?++s:--s)p.push(e/(t.length-1))}return w(),o=t},x=function(t){var e,n;if(null!=r){for(n=r.length-1,e=0;e<n&&t>=r[e];)e++;return e-1}return 0},E=function(t){return t},y=function(t,e){var i,a,h,g,m,y,w;if(null==e&&(e=!1),isNaN(t)||null===t)return u;if(w=e?t:r&&r.length>2?x(t)/(r.length-2):f!==l?(t-l)/(f-l):1,e||(w=E(w)),1!==s&&(w=nt(w,s)),w=d[0]+w*(1-d[0]-d[1]),w=Math.min(1,Math.max(0,w)),h=Math.floor(1e4*w),b&&n[h])i=n[h];else{if("array"===Mt(o))for(a=g=0,y=p.length-1;0<=y?g<=y:g>=y;a=0<=y?++g:--g){if(w<=(m=p[a])){i=o[a];break}if(w>=m&&a===p.length-1){i=o[a];break}if(w>m&&w<p[a+1]){w=(w-m)/(p[a+1]-m),i=C.interpolate(o[a],o[a+1],w,c);break}}else"function"===Mt(o)&&(i=o(w));b&&(n[h]=i)}return i},w=function(){return n={}},v(t),(m=function(t){var e;return e=C(y(t)),h&&e[h]?e[h]():e}).classes=function(t){var e;return null!=t?("array"===Mt(t)?(r=t,a=[t[0],t[t.length-1]]):(e=C.analyze(a),r=0===t?[e.min,e.max]:C.limits(e,"e",t)),m):r},m.domain=function(t){var e,r,n,i,s,c,u;if(!arguments.length)return a;if(l=t[0],f=t[t.length-1],p=[],n=o.length,t.length===n&&l!==f)for(s=0,i=t.length;s<i;s++)r=t[s],p.push((r-l)/(f-l));else for(e=u=0,c=n-1;0<=c?u<=c:u>=c;e=0<=c?++u:--u)p.push(e/(n-1));return a=[l,f],m},m.mode=function(t){return arguments.length?(c=t,w(),m):c},m.range=function(t,e){return v(t),m},m.out=function(t){return h=t,m},m.spread=function(t){return arguments.length?(g=t,m):g},m.correctLightness=function(t){return null==t&&(t=!0),i=t,w(),E=i?function(t){var e,r,n,o,i,a,s,f;for(a=(e=y(0,!0).lab()[0])>(r=y(1,!0).lab()[0]),n=y(t,!0).lab()[0]-(o=e+(r-e)*t),s=0,f=1,i=20;Math.abs(n)>.01&&i-- >0;)a&&(n*=-1),n<0?(s=t,t+=.5*(f-t)):(f=t,t+=.5*(s-t)),n=y(t,!0).lab()[0]-o;return t}:function(t){return t},m},m.padding=function(t){return null!=t?("number"===Mt(t)&&(t=[t,t]),d=t,m):d},m.colors=function(e,n){var i,s,f,l,c,u,h,d;if(arguments.length<2&&(n="hex"),c=[],0===arguments.length)c=o.slice(0);else if(1===e)c=[m(.5)];else if(e>1)s=a[0],i=a[1]-s,c=function(){u=[];for(var t=0;0<=e?t<e:t>e;0<=e?t++:t--)u.push(t);return u}.apply(this).map((function(t){return m(s+t/(e-1)*i)}));else{if(t=[],h=[],r&&r.length>2)for(f=d=1,l=r.length;1<=l?d<l:d>l;f=1<=l?++d:--d)h.push(.5*(r[f-1]+r[f]));else h=a;c=h.map((function(t){return m(t)}))}return C[n]&&(c=c.map((function(t){return t[n]()}))),c},m.cache=function(t){return null!=t?(b=t,m):b},m.gamma=function(t){return null!=t?(s=t,m):s},m.nodata=function(t){return null!=t?(u=C(t),m):u},m},null==C.scales&&(C.scales={}),C.scales.cool=function(){return C.scale([C.hsl(180,1,.9),C.hsl(250,.7,.4)])},C.scales.hot=function(){return C.scale(["#000","#f00","#ff0","#fff"],[0,.25,.75,1]).mode("rgb")},C.analyze=function(t,e,r){var n,o,i,a,s,f;if(s={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0},null==r&&(r=function(){return!0}),n=function(t){null==t||isNaN(t)||(s.values.push(t),s.sum+=t,t<s.min&&(s.min=t),t>s.max&&(s.max=t),s.count+=1)},f=function(t,o){if(r(t,o))return null!=e&&"function"===Mt(e)?n(e(t)):null!=e&&"string"===Mt(e)||"number"===Mt(e)?n(t[e]):n(t)},"array"===Mt(t))for(a=0,i=t.length;a<i;a++)f(t[a]);else for(o in t)f(t[o],o);return s.domain=[s.min,s.max],s.limits=function(t,e){return C.limits(s,t,e)},s},C.limits=function(t,e,r){var n,o,i,a,s,f,l,c,u,h,d,p,b,m,x,y,w,v,E,M,D,A,R,G,I,O,k,S,B,T,F,L,j,N,P,H,Z,U,X,J,Y,W,K,V,z,_,tt,et,rt,ot,it,at,st,ft,lt;if(null==e&&(e="equal"),null==r&&(r=7),"array"===Mt(t)&&(t=C.analyze(t)),I=t.min,$=t.max,t.sum,ft=t.values.sort((function(t,e){return t-e})),1===r)return[I,$];if(R=[],"c"===e.substr(0,1)&&(R.push(I),R.push($)),"e"===e.substr(0,1)){for(R.push(I),M=F=1,P=r-1;1<=P?F<=P:F>=P;M=1<=P?++F:--F)R.push(I+M/r*($-I));R.push($)}else if("l"===e.substr(0,1)){if(I<=0)throw"Logarithmic scales are only possible for values > 0";for(O=Math.LOG10E*q(I),G=Math.LOG10E*q($),R.push(I),M=lt=1,H=r-1;1<=H?lt<=H:lt>=H;M=1<=H?++lt:--lt)R.push(nt(10,O+M/r*(G-O)));R.push($)}else if("q"===e.substr(0,1)){for(R.push(I),M=n=1,W=r-1;1<=W?n<=W:n>=W;M=1<=W?++n:--n)L=(ft.length-1)*M/r,(j=Q(L))===L?R.push(ft[j]):(N=L-j,R.push(ft[j]*(1-N)+ft[j+1]*N));R.push($)}else if("k"===e.substr(0,1)){for(S=ft.length,m=new Array(S),v=new Array(r),ot=!0,B=0,y=null,(y=[]).push(I),M=o=1,K=r-1;1<=K?o<=K:o>=K;M=1<=K?++o:--o)y.push(I+M/r*($-I));for(y.push($);ot;){for(D=i=0,V=r-1;0<=V?i<=V:i>=V;D=0<=V?++i:--i)v[D]=0;for(M=a=0,z=S-1;0<=z?a<=z:a>=z;M=0<=z?++a:--a){for(st=ft[M],k=Number.MAX_VALUE,D=s=0,_=r-1;0<=_?s<=_:s>=_;D=0<=_?++s:--s)(E=g(y[D]-st))<k&&(k=E,x=D);v[x]++,m[M]=x}for(T=new Array(r),D=f=0,tt=r-1;0<=tt?f<=tt:f>=tt;D=0<=tt?++f:--f)T[D]=null;for(M=l=0,et=S-1;0<=et?l<=et:l>=et;M=0<=et?++l:--l)null===T[w=m[M]]?T[w]=ft[M]:T[w]+=ft[M];for(D=c=0,rt=r-1;0<=rt?c<=rt:c>=rt;D=0<=rt?++c:--c)T[D]*=1/v[D];for(ot=!1,D=u=0,Z=r-1;0<=Z?u<=Z:u>=Z;D=0<=Z?++u:--u)if(T[D]!==y[M]){ot=!0;break}y=T,++B>200&&(ot=!1)}for(A={},D=h=0,U=r-1;0<=U?h<=U:h>=U;D=0<=U?++h:--h)A[D]=[];for(M=d=0,X=S-1;0<=X?d<=X:d>=X;M=0<=X?++d:--d)A[w=m[M]].push(ft[M]);for(it=[],D=p=0,J=r-1;0<=J?p<=J:p>=J;D=0<=J?++p:--p)it.push(A[D][0]),it.push(A[D][A[D].length-1]);for(it=it.sort((function(t,e){return t-e})),R.push(it[0]),M=b=1,Y=it.length-1;b<=Y;M=b+=2)at=it[M],isNaN(at)||-1!==R.indexOf(at)||R.push(at)}return R},S=function(t,e,r){var n,o,i,a;return t=(n=Dt(arguments))[0],e=n[1],r=n[2],isNaN(t)&&(t=0),(t/=360)<1/3?i=1-((o=(1-e)/3)+(a=(1+e*D(l*t)/D(s-l*t))/3)):t<2/3?o=1-((a=(1-e)/3)+(i=(1+e*D(l*(t-=1/3))/D(s-l*t))/3)):a=1-((i=(1-e)/3)+(o=(1+e*D(l*(t-=2/3))/D(s-l*t))/3)),[255*(a=V(r*a*3)),255*(i=V(r*i*3)),255*(o=V(r*o*3)),n.length>3?n[3]:1]},ft=function(){var t,e,r,n,o,i,a;return o=(i=Dt(arguments))[0],e=i[1],t=i[2],l=2*Math.PI,o/=255,e/=255,t/=255,0==(a=1-Math.min(o,e,t)/(n=(o+e+t)/3))?r=0:(r=(o-e+(o-t))/2,r/=Math.sqrt((o-e)*(o-e)+(o-t)*(e-t)),r=Math.acos(r),t>e&&(r=l-r),r/=l),[360*r,a,n]},C.hsi=function(){return function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(r,It.call(arguments).concat(["hsi"]),(function(){}))},d.hsi=S,r.prototype.hsi=function(){return ft(this._rgb)},j=function(t,e,r,n){var o,i,a,s,f,l,c,u,h,d;return"hsl"===n?(h=t.hsl(),d=e.hsl()):"hsv"===n?(h=t.hsv(),d=e.hsv()):"hcg"===n?(h=t.hcg(),d=e.hcg()):"hsi"===n?(h=t.hsi(),d=e.hsi()):"lch"!==n&&"hcl"!==n||(n="hcl",h=t.hcl(),d=e.hcl()),"h"===n.substr(0,1)&&(i=h[0],c=h[1],s=h[2],a=d[0],u=d[1],f=d[2]),isNaN(i)||isNaN(a)?isNaN(i)?isNaN(a)?o=Number.NaN:(o=a,1!==s&&0!==s||"hsv"===n||(l=u)):(o=i,1!==f&&0!==f||"hsv"===n||(l=c)):o=i+r*(a>i&&a-i>180?a-(i+360):a<i&&i-a>180?a+360-i:a-i),null==l&&(l=c+r*(u-c)),C[n](o,l,s+r*(f-s))},H=function(t,e,r,n){var o,i;return o=t.num(),i=e.num(),C.num(o+(i-o)*r,"num")},(p=p.concat(function(){var t,e,r,n;for(n=[],e=0,t=(r=["hsv","hsl","hsi","hcl","lch","hcg"]).length;e<t;e++)_=r[e],n.push([_,j]);return n}())).push(["num",H]),N=function(t,e,n,o){var i,a;return i=t.lab(),a=e.lab(),new r(i[0]+n*(a[0]-i[0]),i[1]+n*(a[1]-i[1]),i[2]+n*(a[2]-i[2]),o)},p.push(["lab",N])}.call(this)},990:function(t){"undefined"!=typeof self&&self,t.exports=function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){const n=r(5);t.exports=function(t,e,r){const o=r&&r.debug||!1,i=r&&r.startIndex||0;o&&console.log("starting findTag with",e," and ",r);const a=n(t,`<${e}[ >]`,i);if(o&&console.log("start:",a),-1===a)return;const s=a+e.length+n(t.slice(a+e.length),"[ /]"+e+">",0)+1+e.length+1;if(o&&console.log("end:",s),-1===s)return;const f=t.slice(a,s);return{inner:f.slice(f.indexOf(">")+1,f.lastIndexOf("<")),outer:f,start:a,end:s}}},function(t,e,r){var n=r(2),o=r(0),i=r(6),a=r(12).default,s=r(7),f=r(8),l=(f.ARRAY_TYPE,f.EXCLUDED_FORMATS),c=f.BYTES_PER_VALUE,u=f.DATA_VIEW_READER_NAME,h=f.FORMATS,d=f.HASHED_FIELDS,p=f.NUM_FIELDS,g=(f.NUM_HASHED_FIELDS,f.UNSUPPORTED_MSG),b=h.ESRI_WKT,m=h.GEOSERVER,x=h.MAPFILE,y=h.MAPNIK,w=h.OGC_GML,v=h.OGC_XML,C=h.OGC_WKT,E=h.POSTGIS,M=h.PROJ_4,D=h.PROJ_4_JS,A=r(9),R=new DataView(A),G=r(11).hash,I=["PROJECTEDCRS","PROJCRS","GEOGCS","GEOCCS","PROJCS","LOCAL_CS","GEODCRS","GEODETICCRS","GEODETICDATUM","ENGCRS","ENGINEERINGCRS"];function Q(t){return function(t){return!(!(t=t.trim()).startsWith("PROJCS[")&&!t.startsWith("GEOGCS["))&&I.some((function(e){return t.includes(e)}))}(t)?t.includes("AUTHORITY")?C:b:t.includes("gml:ProjectedCRS")||t.includes("gml:GeodeticCRS")||t.includes("gml:GeographicCRS")?t.includes("gml:srsID")?v:w:t.startsWith("+proj=")?M:t.startsWith('proj4.defs("EPSG:')?D:/^\d{1,6}\=(PROJCS|GEOGCS)/.test(t)?m:t.startsWith("PROJECTION")&&t.endsWith("END")?x:t.endsWith("</Map>")?y:t.startsWith("INSERT")?E:"SOMETHING ELSE"}function O(t,e,r){r&&console.log("looking up "+e);var n=G(t);r&&console.log("hashed:",n);var o=d.indexOf(e)+1;r&&console.log("offset:",o);for(var i=o*c;i<A.byteLength;i+=p*c)if(n===R[u](i,!0))return R[u](i-o*c,!0)}function k(t,e){var r=!(!e||!e.debug)&&e.debug,f=Q(t);if(r&&console.log("dataType:",f),r&&console.log("EXCLUDED_FORMATS:",l),l.includes(f.toLowerCase()))throw new Error(g.replace("{}",f));if(f===C){var c=a(t);if(r&&console.log("parsed:",c),c.AUTHORITY){var u=c.AUTHORITY;return Number(u.epsg||u.EPSG)}}else{if(f==b){var h=a(t);if(r&&console.log("parsed:",h),h.name.match(/^WGS_1984_UTM_Zone_\d{1,2}(N|S)$/)){var d=h.name.split("_").pop(),p=d.substring(0,d.length-1),A="N"==d.substr(-1)?6:7;return Number.parseInt("32"+A+p)}return O(t=s(t),b,!1)}if(f===w){var R=o(t,"gml:identifier",{debug:r}).inner;return Number(R.replace("urn:ogc:def:crs:EPSG::",""))}if(f===v)return Number(n(t,["gml:srsID","gml:name"],{debug:r}).inner);if(f===M){if(t.startsWith("+proj=utm")){var G=t.split(" ").find((function(t){return t.startsWith("+zone=")})).split("=")[1],I=t.includes("+south")?"7":"6";return Number.parseInt("32"+I+G)}return O(t,M)}if(f===D)return Number(t.substring(17,t.indexOf('"',17)));if(f===m)return Number(t.match(/^\d{1,6}/)[0]);if(f===x){if(t.includes("init=epsg:"))return Number.parseInt(/("init\=epsg:)(\d{1,10})(")/.exec(t)[2]);if(t.includes('"proj=utm"')){var S=/("zone\=)(\d{1,2})(")/.exec(t)[2],B=t.includes('"south"')?"7":"6";return Number.parseInt("32"+B+S)}return O(t,x)}if(f===y){var T=o(t,"Map");return k(i(T.outer,"srs"))}if(f===E)return Number(t.substring(t.indexOf("values (")+8,t.indexOf("EPSG")-3).trim())}}void 0!==t.exports&&(t.exports=k),"undefined"!=typeof window?window.getEPSGCode=k:"undefined"!=typeof self&&(self.getEPSGCode=k)},function(t,e,r){const n=r(3);t.exports=function(t,e,r){const o=r&&r.debug||!1,i=n(t,e,{debug:o,returnOnFirst:!0});return Array.isArray(i)&&1===i.length?i[0]:void 0}},function(t,e,r){const n=r(4);t.exports=function(t,e,r){const o=r&&r.debug||!1,i=r&&r.returnOnFirst||!1;let a=n(t,e.shift(),{debug:o});o&&console.log("first tags are:",a);for(let t=0;t<e.length;t++){const r=e[t];let s=[];for(let f=0;f<a.length;f++){const l=a[f],c=n(l.outer,r,{debug:o,startIndex:1});if(c.length>0){if(c.forEach((t=>{t.start+=l.start,t.end+=l.start})),i&&t===e.length-1)return[c[0]];s=s.concat(c)}}a=s}return a}},function(t,e,r){const n=r(0);t.exports=function(t,e,r){const o=[],i=r&&r.debug||!1;let a,s=r&&r.startIndex||0;for(;a=n(t,e,{debug:i,startIndex:s});)s=a.end,o.push(a);return o}},function(t,e){t.exports=function(t,e,r){const n=new RegExp(e).exec(t.slice(r));return n?r+n.index:-1}},function(t,e){t.exports=function(t,e,r){const n=r&&r.debug||!1;n&&console.log("getting "+e+" in "+t);const o="object"==typeof t?t.outer:t,i=`${e}\\="(.*)"`;n&&console.log("pattern:",i);const a=new RegExp(i).exec(o);if(a)return a[1]}},function(t,e){t.exports=function(t){return(t=t.replace('DATUM["D_','DATUM["')).replace(/\.\d{16,}/g,(function(t){return t.substr(0,16)}))}},function(t,e){var r=["esriwkt","mapfile","proj4"],n=r;"undefined"!=typeof process&&process.env;var o=[];"undefined"!=typeof process&&process.env,n.includes("esriwkt")||o.push("esriwkt"),n.includes("mapfile")||o.push("mapfile"),n.includes("proj4")||(o.push("mapnik"),o.push("proj4")),o.sort();var i=n.length,a=i+1,s=Int16Array;t.exports={ARRAY_TYPE:s,DATA_VIEW_READER_NAME:"getInt16",BYTES_PER_VALUE:2,DEFAULT_HASHED_FIELDS:r,EXCLUDED_FORMATS:o,FORMATS:{ESRI_WKT:"esriwkt",GEOSERVER:"geoserver",MAPFILE:"mapfile",MAPNIK:"mapnik",OGC_GML:"gml",OGC_XML:"xml",OGC_WKT:"wkt",POSTGIS:"postgis",PROJ_4:"proj4",PROJ_4_JS:"js"},HASHED_FIELDS:n,NUM_HASHED_FIELDS:i,NUM_FIELDS:a,UNSUPPORTED_MSG:"[get-epsg-code] {} format not supported"}},function(t,e,r){t.exports=r(10)("")},function(t,e,r){"use strict";t.exports=function(t){for(var e="undefined"!=typeof window&&"function"==typeof window.atob?window.atob(t):Buffer.from(t,"base64").toString("binary"),r=new Uint8Array(e.length),n=0;n<e.length;++n)r[n]=e.charCodeAt(n);return r.buffer}},function(t,e){t.exports={hash:function(t){var e,r=0;if(0===(t=(t=t.trim()).replace(/  /g," ")).length)return r;for(t.length,e=0;e<t.length;e++)r=(r<<5)-r+t.charCodeAt(e),r|=0;return Math.round(r/Math.pow(2,16))}}},function(t,e,r){"use strict";r.r(e);var n=/\s/,o=/[A-Za-z]/,i=/[A-Za-z84]/,a=/[,\]]/,s=/[\d\.E\-\+]/;function f(t){if("string"!=typeof t)throw new Error("not a string");this.text=t.trim(),this.level=0,this.place=0,this.root=null,this.stack=[],this.currentObject=null,this.state=1}function l(t,e,r){Array.isArray(e)&&(r.unshift(e),e=null);var n=e?{}:t,o=r.reduce((function(t,e){return c(e,t),t}),n);e&&(t[e]=o)}function c(t,e){if(Array.isArray(t)){var r,n=t.shift();if("PARAMETER"===n&&(n=t.shift()),1===t.length)return Array.isArray(t[0])?(e[n]={},void c(t[0],e[n])):void(e[n]=t[0]);if(t.length)if("TOWGS84"!==n)switch(Array.isArray(n)||(e[n]={}),n){case"UNIT":case"PRIMEM":case"VERT_DATUM":return e[n]={name:t[0].toLowerCase(),convert:t[1]},void(3===t.length&&c(t[2],e[n]));case"SPHEROID":case"ELLIPSOID":return e[n]={name:t[0],a:t[1],rf:t[2]},void(4===t.length&&c(t[3],e[n]));case"PROJECTEDCRS":case"PROJCRS":case"GEOGCS":case"GEOCCS":case"PROJCS":case"LOCAL_CS":case"GEODCRS":case"GEODETICCRS":case"GEODETICDATUM":case"EDATUM":case"ENGINEERINGDATUM":case"VERT_CS":case"VERTCRS":case"VERTICALCRS":case"COMPD_CS":case"COMPOUNDCRS":case"ENGINEERINGCRS":case"ENGCRS":case"FITTED_CS":case"LOCAL_DATUM":case"DATUM":return t[0]=["name",t[0]],void l(e,n,t);default:for(r=-1;++r<t.length;)if(!Array.isArray(t[r]))return c(t,e[n]);return l(e,n,t)}else e[n]=t;else e[n]=!0}else e[t]=!0}function u(t){return.017453292519943295*t}f.prototype.readCharicter=function(){var t=this.text[this.place++];if(4!==this.state)for(;n.test(t);){if(this.place>=this.text.length)return;t=this.text[this.place++]}switch(this.state){case 1:return this.neutral(t);case 2:return this.keyword(t);case 4:return this.quoted(t);case 5:return this.afterquote(t);case 3:return this.number(t);case-1:return}},f.prototype.afterquote=function(t){if('"'===t)return this.word+='"',void(this.state=4);if(a.test(t))return this.word=this.word.trim(),void this.afterItem(t);throw new Error("havn't handled \""+t+'" in afterquote yet, index '+this.place)},f.prototype.afterItem=function(t){return","===t?(null!==this.word&&this.currentObject.push(this.word),this.word=null,void(this.state=1)):"]"===t?(this.level--,null!==this.word&&(this.currentObject.push(this.word),this.word=null),this.state=1,this.currentObject=this.stack.pop(),void(this.currentObject||(this.state=-1))):void 0},f.prototype.number=function(t){if(!s.test(t)){if(a.test(t))return this.word=parseFloat(this.word),void this.afterItem(t);throw new Error("havn't handled \""+t+'" in number yet, index '+this.place)}this.word+=t},f.prototype.quoted=function(t){'"'!==t?this.word+=t:this.state=5},f.prototype.keyword=function(t){if(i.test(t))this.word+=t;else{if("["===t){var e=[];return e.push(this.word),this.level++,null===this.root?this.root=e:this.currentObject.push(e),this.stack.push(this.currentObject),this.currentObject=e,void(this.state=1)}if(!a.test(t))throw new Error("havn't handled \""+t+'" in keyword yet, index '+this.place);this.afterItem(t)}},f.prototype.neutral=function(t){if(o.test(t))return this.word=t,void(this.state=2);if('"'===t)return this.word="",void(this.state=4);if(s.test(t))return this.word=t,void(this.state=3);if(!a.test(t))throw new Error("havn't handled \""+t+'" in neutral yet, index '+this.place);this.afterItem(t)},f.prototype.output=function(){for(;this.place<this.text.length;)this.readCharicter();if(-1===this.state)return this.root;throw new Error('unable to parse string "'+this.text+'". State is '+this.state)},e.default=function(t){var e=function(t){return new f(t).output()}(t),r=e.shift(),n=e.shift();e.unshift(["name",n]),e.unshift(["type",r]);var o={};return c(e,o),function(t){"GEOGCS"===t.type?t.projName="longlat":"LOCAL_CS"===t.type?(t.projName="identity",t.local=!0):"object"==typeof t.PROJECTION?t.projName=Object.keys(t.PROJECTION)[0]:t.projName=t.PROJECTION,t.UNIT&&(t.units=t.UNIT.name.toLowerCase(),"metre"===t.units&&(t.units="meter"),t.UNIT.convert&&("GEOGCS"===t.type?t.DATUM&&t.DATUM.SPHEROID&&(t.to_meter=t.UNIT.convert*t.DATUM.SPHEROID.a):t.to_meter=t.UNIT.convert));var e=t.GEOGCS;function r(e){return e*(t.to_meter||1)}"GEOGCS"===t.type&&(e=t),e&&(e.DATUM?t.datumCode=e.DATUM.name.toLowerCase():t.datumCode=e.name.toLowerCase(),"d_"===t.datumCode.slice(0,2)&&(t.datumCode=t.datumCode.slice(2)),"new_zealand_geodetic_datum_1949"!==t.datumCode&&"new_zealand_1949"!==t.datumCode||(t.datumCode="nzgd49"),"wgs_1984"===t.datumCode&&("Mercator_Auxiliary_Sphere"===t.PROJECTION&&(t.sphere=!0),t.datumCode="wgs84"),"_ferro"===t.datumCode.slice(-6)&&(t.datumCode=t.datumCode.slice(0,-6)),"_jakarta"===t.datumCode.slice(-8)&&(t.datumCode=t.datumCode.slice(0,-8)),~t.datumCode.indexOf("belge")&&(t.datumCode="rnb72"),e.DATUM&&e.DATUM.SPHEROID&&(t.ellps=e.DATUM.SPHEROID.name.replace("_19","").replace(/[Cc]larke\_18/,"clrk"),"international"===t.ellps.toLowerCase().slice(0,13)&&(t.ellps="intl"),t.a=e.DATUM.SPHEROID.a,t.rf=parseFloat(e.DATUM.SPHEROID.rf,10)),e.DATUM&&e.DATUM.TOWGS84&&(t.datum_params=e.DATUM.TOWGS84),~t.datumCode.indexOf("osgb_1936")&&(t.datumCode="osgb36"),~t.datumCode.indexOf("osni_1952")&&(t.datumCode="osni52"),(~t.datumCode.indexOf("tm65")||~t.datumCode.indexOf("geodetic_datum_of_1965"))&&(t.datumCode="ire65"),"ch1903+"===t.datumCode&&(t.datumCode="ch1903"),~t.datumCode.indexOf("israel")&&(t.datumCode="isr93")),t.b&&!isFinite(t.b)&&(t.b=t.a),[["standard_parallel_1","Standard_Parallel_1"],["standard_parallel_2","Standard_Parallel_2"],["false_easting","False_Easting"],["false_northing","False_Northing"],["central_meridian","Central_Meridian"],["latitude_of_origin","Latitude_Of_Origin"],["latitude_of_origin","Central_Parallel"],["scale_factor","Scale_Factor"],["k0","scale_factor"],["latitude_of_center","Latitude_Of_Center"],["latitude_of_center","Latitude_of_center"],["lat0","latitude_of_center",u],["longitude_of_center","Longitude_Of_Center"],["longitude_of_center","Longitude_of_center"],["longc","longitude_of_center",u],["x0","false_easting",r],["y0","false_northing",r],["long0","central_meridian",u],["lat0","latitude_of_origin",u],["lat0","standard_parallel_1",u],["lat1","standard_parallel_1",u],["lat2","standard_parallel_2",u],["azimuth","Azimuth"],["alpha","azimuth",u],["srsCode","name"]].forEach((function(e){return r=t,o=(n=e)[0],i=n[1],void(!(o in r)&&i in r&&(r[o]=r[i],3===n.length&&(r[o]=n[2](r[o]))));var r,n,o,i})),t.long0||!t.longc||"Albers_Conic_Equal_Area"!==t.projName&&"Lambert_Azimuthal_Equal_Area"!==t.projName||(t.long0=t.longc),t.lat_ts||!t.lat1||"Stereographic_South_Pole"!==t.projName&&"Polar Stereographic (variant B)"!==t.projName||(t.lat0=u(t.lat1>0?90:-90),t.lat_ts=t.lat1)}(o),o}}])},665:()=>{},99:()=>{},588:t=>{var e=function(t){"use strict";var e,r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function f(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{f({},"")}catch(t){f=function(t,e,r){return t[e]=r}}function l(t,e,r,n){var o=e&&e.prototype instanceof b?e:b,i=Object.create(o.prototype),a=new G(n||[]);return i._invoke=function(t,e,r){var n=u;return function(o,i){if(n===d)throw new Error("Generator is already running");if(n===p){if("throw"===o)throw i;return Q()}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=D(a,r);if(s){if(s===g)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===u)throw n=p,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=d;var f=c(t,e,r);if("normal"===f.type){if(n=r.done?p:h,f.arg===g)continue;return{value:f.arg,done:r.done}}"throw"===f.type&&(n=p,r.method="throw",r.arg=f.arg)}}}(t,r,a),i}function c(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=l;var u="suspendedStart",h="suspendedYield",d="executing",p="completed",g={};function b(){}function m(){}function x(){}var y={};f(y,i,(function(){return this}));var w=Object.getPrototypeOf,v=w&&w(w(I([])));v&&v!==r&&n.call(v,i)&&(y=v);var C=x.prototype=b.prototype=Object.create(y);function E(t){["next","throw","return"].forEach((function(e){f(t,e,(function(t){return this._invoke(e,t)}))}))}function M(t,e){function r(o,i,a,s){var f=c(t[o],t,i);if("throw"!==f.type){var l=f.arg,u=l.value;return u&&"object"==typeof u&&n.call(u,"__await")?e.resolve(u.__await).then((function(t){r("next",t,a,s)}),(function(t){r("throw",t,a,s)})):e.resolve(u).then((function(t){l.value=t,a(l)}),(function(t){return r("throw",t,a,s)}))}s(f.arg)}var o;this._invoke=function(t,n){function i(){return new e((function(e,o){r(t,n,e,o)}))}return o=o?o.then(i,i):i()}}function D(t,r){var n=t.iterator[r.method];if(n===e){if(r.delegate=null,"throw"===r.method){if(t.iterator.return&&(r.method="return",r.arg=e,D(t,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var o=c(n,t.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var i=o.arg;return i?i.done?(r[t.resultName]=i.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,g):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function A(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function R(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function G(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(A,this),this.reset(!0)}function I(t){if(t){var r=t[i];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,a=function r(){for(;++o<t.length;)if(n.call(t,o))return r.value=t[o],r.done=!1,r;return r.value=e,r.done=!0,r};return a.next=a}}return{next:Q}}function Q(){return{value:e,done:!0}}return m.prototype=x,f(C,"constructor",x),f(x,"constructor",m),m.displayName=f(x,s,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===m||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,x):(t.__proto__=x,f(t,s,"GeneratorFunction")),t.prototype=Object.create(C),t},t.awrap=function(t){return{__await:t}},E(M.prototype),f(M.prototype,a,(function(){return this})),t.AsyncIterator=M,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new M(l(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},E(C),f(C,s,"Generator"),f(C,i,(function(){return this})),f(C,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function r(){for(;e.length;){var n=e.pop();if(n in t)return r.value=n,r.done=!1,r}return r.done=!0,r}},t.values=I,G.prototype={constructor:G,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(R),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return s.type="throw",s.arg=t,r.next=n,o&&(r.method="next",r.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var f=n.call(a,"catchLoc"),l=n.call(a,"finallyLoc");if(f&&l){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(f){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,g):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),R(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;R(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:I(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),g}},t}(t.exports);try{regeneratorRuntime=e}catch(t){"object"==typeof globalThis?globalThis.regeneratorRuntime=e:Function("r","regeneratorRuntime = r")(e)}},355:(t,e,r)=>{const n=r(99);t.exports=({bbox:t,from:e,to:r})=>{let o;"number"==typeof e&&(e="EPSG:"+e),"number"==typeof r&&(r="EPSG:"+r),"function"==typeof n&&n.defs&&e in n.defs&&r in n.defs?o=n:"object"==typeof window&&"function"==typeof window.proj4&&window.proj4.defs&&e in window.proj4.defs&&r in window.proj4.defs&&(o=window.proj4);const i=o(e,r).forward,[a,s,f,l]=t,c=[i([a,l]),i([f,l]),i([a,s]),i([f,s])],u=c.map((t=>t[0])),h=c.map((t=>t[1]));return[Math.min(...u),Math.min(...h),Math.max(...u),Math.max(...h)]}},730:t=>{t.exports=({bbox:t,container:e,debug:r,origin:n,padding:o,scale:i})=>{r&&console.log("[snap-bbox] starting"),r&&console.log("[snap-bbox] bbox:",t),r&&console.log("[snap-bbox] debug:",r),r&&console.log("[snap-bbox] origin:",n),r&&console.log("[snap-bbox] padding:",o),r&&console.log("[snap-bbox] scale:",i);const[a,s]=n;r&&console.log("[snap-bbox] originX:",a),r&&console.log("[snap-bbox] originY:",s);const[f,l]=o||[0,0];r&&console.log("[snap-bbox] padX:",f),r&&console.log("[snap-bbox] padY:",l);const[c,u]=i;r&&console.log("[snap-bbox] scale_x:",c),r&&console.log("[snap-bbox] scale_y:",u);const h=Math.sign(c),d=Math.sign(u);r&&console.log("[snap-bbox] sign_scale_x:",h),r&&console.log("[snap-bbox] sign_scale_y:",d);const[p,g,b,m]=t;r&&console.log("[snap-bbox] xmin:",p),r&&console.log("[snap-bbox] ymin:",g),r&&console.log("[snap-bbox] xmax:",b),r&&console.log("[snap-bbox] ymax:",m);const x=(p-a)/c,y=(b-a)/c,w=(m-s)/u,v=(g-s)/u;r&&console.log("[snap-bbox] left:",x),r&&console.log("[snap-bbox] right:",y),r&&console.log("[snap-bbox] top:",w),r&&console.log("[snap-bbox] bottom:",v);let C=Math.floor(x)-f,E=Math.ceil(y)+f,M=Math.floor(w)-l,D=Math.ceil(v)+l;if(r&&console.log("[snap-bbox] left_int:",C),r&&console.log("[snap-bbox] right_int:",E),r&&console.log("[snap-bbox] top_int:",M),r&&console.log("[snap-bbox] bottom_int:",D),e){r&&console.log("[snap-bbox] container:",e);const t=(e[0]-a)/c,n=(e[2]-a)/c,o=(e[3]-s)/u,i=(e[1]-s)/u;r&&console.log("[snap-bbox] min_left:",t),r&&console.log("[snap-bbox] max_right:",n),r&&console.log("[snap-bbox] min_top:",o),r&&console.log("[snap-bbox] max_bottom:",i);const f=Math.ceil(t),l=Math.floor(n),h=Math.ceil(o),d=Math.floor(i);r&&console.log("[snap-bbox] min_left_int:",f),r&&console.log("[snap-bbox] max_right_int:",l),r&&console.log("[snap-bbox] min_top_int:",h),r&&console.log("[snap-bbox] max_bottom_int:",d),C=Math.max(C,f),E=Math.min(E,l),M=Math.max(M,h),D=Math.min(D,d),r&&console.log("[snap-bbox] after containment, left_int:",C),r&&console.log("[snap-bbox] after containment, right_int:",E),r&&console.log("[snap-bbox] after containment, top_int:",M),r&&console.log("[snap-bbox] after containment, bottom_int:",D)}const A=[0===C?0:C,0===D?0:D,0===E?0:E,0===M?0:M];return r&&console.log("[snap-bbox] bbox_in_grid_cells:",A),{bbox_in_coordinate_system:[a+C*c,s+D*u,a+E*c,s+M*u],bbox_in_grid_cells:A}}},24:t=>{t.exports=function(t){const e=t.toString();return e.startsWith("326")?"N":e.startsWith("327")?"S":void 0}},999:(t,e,r)=>{const n=r(171),o=r(24);t.exports=function(t){return`+proj=utm +zone=${n(t)}${"S"===o(t)?" +south ":" "}+ellps=WGS84 +datum=WGS84 +units=m +no_defs`}},171:t=>{t.exports=function(t){return Number.parseInt(t.toString().substring(3))}},293:t=>{t.exports=function(t){const e=t.toString();return e.startsWith("326")||e.startsWith("327")}},870:e=>{"use strict";e.exports=t}},r={};function n(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,loaded:!1,exports:{}};return e[t].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t);var o={};return(()=>{"use strict";n.d(o,{default:()=>J}),n(588);var t=n(870),e=n(771),r=n.n(e),i=n(293),a=n.n(i),s=n(999),f=n.n(s),l=n(665),c=n.n(l),u=n(990),h=n(355);const d=(t,e)=>(t+e)/2,p=t=>Array.isArray(t),g=t=>null!=t&&""!==t,b=t=>"function"==typeof t,m=t=>"object"==typeof t,x=t=>"string"==typeof t,y=t=>"number"==typeof t,w=t=>m(t)&&C(t,["getEast","getNorth","getSouth","getWest"]),v=(t,e)=>m(t)&&m(t[e]),C=(t,e)=>e.every((e=>((t,e)=>m(t)&&b(t[e]))(t,e))),E=(t,e)=>m(t)&&void 0!==t[e]&&null!==t[e],M=(t,e)=>e.every((e=>E(t,e))),D=t=>p(t)&&t.every(y);class A{constructor(t,{srs:e}={}){let r,n,o,i;if(y(e)?this.srs="EPSG:"+e:(x(e)&&e.startsWith("EPSG:")||g(e))&&(this.srs=e),("object"==typeof obj&&"function"==typeof obj.constructor||void 0)===this.constructor&&(({xmin:r,xmax:n,ymin:o,ymax:i}=t),g(t.srs)&&(this.srs=t.srs)),p(t)&&4===t.length&&D(t))[r,o,n,i]=t;else if(p(t)&&2===t.length&&t.every(p)&&t.every((t=>2===t.length&&D(t))))[[o,r],[i,n]]=t;else if(w(t))r=t.getWest(),n=t.getEast(),o=t.getSouth(),i=t.getNorth(),this.srs||(this.srs="EPSG:4326");else if(p(t)&&2===t.length&&t.every((t=>M(t,["x","y"]))))[{x:r,y:o},{x:n,y:i}]=t;else if(m(t)&&M(t,["x","y"])&&y(t.x)&&y(t.y))r=n=t.x,o=i=t.y,E(t,"spatialReference")&&E(t.spatialReference,"wkid")&&(this.srs||(this.srs=t.spatialReference.wkid));else if(m(t)&&M(t,["xmin","xmax","ymin","ymax"])){({xmin:r,xmax:n,ymin:o,ymax:i}=t);const e=["srs","crs","proj","projection"];for(let r=0;r<e.length;r++){const n=t[e[r]];if(y(n)){this.srs="EPSG:"+n;break}if(x(n)){const t=u(n);y(t)&&(this.srs="EPSG:"+t);break}}!this.srs&&g(t.srs)&&(this.srs=t.srs)}else if(p(t)&&2===t.length&&D(t))r=n=t[0],o=i=t[1];else if(m(t)&&C(t,["getCoordinates"])){const e=t.getCoordinates();r=n=e[0],o=i=e[1]}else if(m(t)&&E(t,"bbox")&&4===t.bbox.length&&D(t))[r,o,n,i]=t.bbox;else if(v(t,"_bounds")&&w(t._bounds)){const{_bounds:e}=t;r=e.getWest(),n=e.getEast(),o=e.getSouth(),i=e.getNorth(),this.srs||(this.srs="EPSG:4326")}else{if(!(m(t)&&m(t._bounds)&&((t,e)=>["_southWest","_northEast"].every((e=>v(t,e))))(t._bounds)))throw new Error("[geo-extent] unknown format");({lat:o,lng:r}=t._bounds._southWest),({lat:i,lng:n}=t._bounds._northEast),g(this.srs)||(this.srs="EPSG:4326")}this.xmin=r,this.ymin=o,this.xmax=n,this.ymax=i,this.width=n-r,this.height=i-o,this.bottomLeft={x:r,y:o},this.bottomRight={x:n,y:o},this.topLeft={x:r,y:i},this.topRight={x:n,y:i},this.leafletBounds=[[this.ymin,this.xmin],[this.ymax,this.xmax]],this.area=this.width*this.height,this.perimeter=2*this.width+2*this.height,this.bbox=[r,o,n,i],this.center={x:d(r,n),y:d(o,i)},this.str=this.bbox.join(",")}_pre(t,e){if(e=new this.constructor(e),g(t.srs)||g(e.srs))if(g(t.srs)&&!g(e.srs))e=new t.constructor({...e,srs:t.srs});else if(!g(t.srs)&&g(e.srs))t=new t.constructor({...t,srs:e.srs});else if(g(t.srs)&&g(e.srs)&&t.srs!==e.srs)e=e.reproj(t.srs);else if(!g(t.srs)||!g(e.srs)||t.srs!==e.srs)throw"UH OH";return[t,e]}clone(){return new this.constructor(this)}contains(t){const[e,r]=this._pre(this,t),n=r.xmin>=e.xmin&&r.xmax<=e.xmax,o=r.ymin>=e.ymin&&r.ymax<=e.ymax;return n&&o}crop(t){if(t=new this.constructor(t),!1===this.overlaps(t,{quiet:!0})&&!1===t.overlaps(this,{quiet:!0}))return null;if(t.contains(this))return this.clone();if("EPSG:4326"===t.srs&&(t.xmin<-180||t.xmax>180)){let e=t.unwrap().map((t=>this.crop(t)));if(e=e.filter(Boolean),0===e.length)return null;let r=e[0];for(let t=1;t<e.length;t++)r=r.combine(e[t]);return r}let e=g(this.srs)&&g(t.srs)?t.reproj(this.srs,{quiet:!0}):t.clone();if(e){if(!this.overlaps(e))return null;const t=Math.max(this.xmin,e.xmin),r=Math.max(this.ymin,e.ymin),n=Math.min(this.xmax,e.xmax),o=Math.min(this.ymax,e.ymax);return new this.constructor([t,r,n,o],{srs:this.srs})}const r=g(this.srs)?this.reproj(4326):this,n=g(t.srs)?t.reproj(4326):t,[o,i,a,s]=r.bbox,[f,l,c,u]=n.bbox;if(!r.overlaps(n))return null;const h=Math.max(o,f),d=Math.max(i,l),p=Math.min(a,c),b=Math.min(s,u);return new this.constructor([h,d,p,b],{srs:4326}).reproj(this.srs)}combine(t){g(this.srs)&&g(t.srs)&&(t=t.reproj(this.srs));const e=Math.min(this.xmin,t.xmin),r=Math.max(this.xmax,t.xmax),n=Math.min(this.ymin,t.ymin),o=Math.max(this.ymax,t.ymax);return new this.constructor({xmin:e,xmax:r,ymin:n,ymax:o,srs:this.srs})}equals(t,{digits:e=13,strict:r=!0}={digits:13,strict:!0}){if(t=new this.constructor(t),g(this.srs)&&g(t.srs))t=t.reproj(this.srs);else if(r&&g(this.srs)!==!g(this.srs))return!1;return this.bbox.map((t=>t.toFixed(e))).join(",")===t.bbox.map((t=>t.toFixed(e))).join(",")}overlaps(t,{quiet:e=!1}={quite:!1}){try{const[e,r]=this._pre(this,t),n=r.ymin<=e.ymax&&r.ymax>=e.ymin;return r.xmin<=e.xmax&&r.xmax>=e.xmin&&n}catch(t){if(e)return;throw t}}reproj(t,{quiet:e=!1}={quiet:!1}){if(g(this.srs)&&this.srs===t)return this.clone();if(!g(this.srs)){if(e)return;throw new Error(`[geo-extent] cannot reproject ${this.bbox} without a projection set`)}if("EPSG:4326"===this.srs&&(this.xmin<-180||this.xmax>180))try{const e=this.unwrap().map((e=>e.reproj(t)));let r=e[0];for(let t=1;t<e.length;t++)r=r.combine(e[t]);return r}catch(t){if(e)return;throw t}const r=h({bbox:this.bbox,from:this.srs,to:t});if(r.some(isNaN)){if(e)return;throw new Error(`[geo-extent] failed to reproject ${this.bbox} from ${this.srs} to ${t}`)}return new A(r,{srs:t})}unwrap(){const{xmin:t,ymin:e,xmax:r,ymax:n,srs:o}=this;if("EPSG:4326"!==o)return[this.clone()];if(t>-180&&r<180)return[this.clone()];if(t<-180&&r>=t+360)return[new this.constructor([-180,e,180,n],{srs:4326})];if(r>180&&t<=r-360)return[new this.constructor([-180,e,180,n],{srs:4326})];let i=[];return t<-180&&i.push(new this.constructor([t+360,e,180,n],{srs:o})),i.push(new this.constructor([t<-180?-180:t,e,r>180?180:r,n],{srs:o})),this.xmax>180&&i.push(new this.constructor([-180,e,r-360,n],{srs:o})),i}asEsriJSON(){return{xmin:this.xmin,ymin:this.ymin,xmax:this.xmax,ymax:this.ymax,spatialReference:{wkid:this.srs}}}asGeoJSON(){const{xmin:t,ymin:e,xmax:r,ymax:n}="EPSG:4326"===this.srs?this:this.reproj(4326);return{type:"Feature",geometry:{type:"Polygon",coordinates:[[[t,n],[r,n],[r,e],[t,e],[t,n]]]}}}asObj(){const t={};for(let e in this){const r=this[e];b(r)||(t[e]=r)}return t}}"object"==typeof window&&(window.GeoExtent=A);var R=n(730),G=n.n(R);function I(t,e,r,n,o,i,a){try{var s=t[i](a),f=s.value}catch(t){return void r(t)}s.done?e(f):Promise.resolve(f).then(n,o)}function Q(t){return function(){var e=this,r=arguments;return new Promise((function(n,o){var i=t.apply(e,r);function a(t){I(i,n,o,a,s,"next",t)}function s(t){I(i,n,o,a,s,"throw",t)}a(void 0)}))}}function O(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function k(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?O(Object(r),!0).forEach((function(e){S(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):O(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function S(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function B(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(t);!(a=(n=r.next()).done)&&(i.push(n.value),!e||i.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}(t,e)||function(t,e){if(t){if("string"==typeof t)return T(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?T(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function F(t){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var L=4326,j=new Set([3785,3857,4269,4326,900913,102113]),N=1e3,P=1e3,H=[0,0],Z=function(t){return console.log("[georaster-layer-for-leaflet] ",t)},U=function(e){var r,n,o,i;return e===t.CRS.Simple||!e.code&&e.infinite&&1===(null==e||null===(r=e.transformation)||void 0===r?void 0:r._a)&&0===(null==e||null===(n=e.transformation)||void 0===n?void 0:n._b)&&-1===(null==e||null===(o=e.transformation)||void 0===o?void 0:o._c)&&0===(null==e||null===(i=e.transformation)||void 0===i?void 0:i._d)},X=t.GridLayer.extend({options:{updateWhenIdle:!0,updateWhenZooming:!1,keepBuffer:25,resolution:Math.pow(2,5),debugLevel:0},initialize:function(e){var n=this;try{if(e.georasters)this.georasters=e.georasters;else{if(!e.georaster)throw new Error("You initialized a GeoRasterLayer without a georaster or georasters value.");this.georasters=[e.georaster]}"url"===this.sourceType&&(e.updateWhenIdle=!1,e.updateWhenZooming=!0,e.keepBuffer=16),e.resampleMethod&&(this.resampleMethod=e.resampleMethod);var o=["height","width","noDataValue","palette","pixelHeight","pixelWidth","projection","sourceType","xmin","xmax","ymin","ymax"];this.georasters.length>1?o.forEach((function(t){if(!n.same(n.georasters,t))throw new Error("all GeoRasters must have the same "+t);n[t]=n.georasters[0][t]})):1===this.georasters.length&&o.forEach((function(t){n[t]=n.georasters[0][t]})),this._cache={innerTile:{},tile:{}},this.extent=new A([this.xmin,this.ymin,this.xmax,this.ymax],{srs:this.projection}),this.ratio=this.height/this.width,this.debugLevel=e.debugLevel,this.debugLevel>=1&&Z({options:e}),this.georasters.every((function(t){return"object"===F(t.values)}))&&(this.rasters=this.georasters.reduce((function(t,e){if(e.values)return t.concat(e.values)}),[]),this.debugLevel>1&&console.log("this.rasters:",this.rasters)),this.chroma=r(),this.scale=r().scale(),t.Util.setOptions(this,e);var i=this.getTileSize();if(this.tileHeight=i.y,this.tileWidth=i.x,this.georasters.length>1&&!e.pixelValuesToColorFn)throw"you must pass in a pixelValuesToColorFn if you are combining rasters";this.numBands=this.georasters.reduce((function(t,e){return t+e.numberOfRasters}),0),this.debugLevel>1&&console.log("this.numBands:",this.numBands),this.currentStats={mins:new Array(this.numBands),maxs:new Array(this.numBands),ranges:new Array(this.numBands)},1!==this.georasters.length||"url"!==this.georasters[0].sourceType||1!==this.georasters[0].numberOfRasters||e.pixelValuesToColorFn||(this.calcStats=!0)}catch(t){console.error("ERROR initializing GeoTIFFLayer",t)}},getRasters:function(e){var r=this,n=e.innerTileTopLeftPoint,o=e.heightOfSampleInScreenPixels,i=e.widthOfSampleInScreenPixels,a=e.zoom,s=e.numberOfSamplesAcross,f=e.numberOfSamplesDown,l=e.ymax,c=e.xmin;this.debugLevel>=1&&console.log("starting getRasters with options:",e);var u=function(e,s){var f=n.x+(s+.5)*i,u=n.y+(e+.5)*o,h=t.point(f,u);r.debugLevel>=1&&Z({mapPoint:h});var d=r.getMap().unproject(h,a),p=d.lat,g=d.lng;if(r.projection===L)return{y:Math.floor((l-p)/r.pixelHeight),x:Math.floor((g-c)/r.pixelWidth)};if(r.getProjector()){var b=B(r.getProjector().inverse([g,p]),2),m=b[0],x=b[1];return m!==1/0&&x!==1/0||r.debugLevel>=1&&console.error("projector converted",[g,p],"to",[m,x]),{y:Math.floor((l-x)/r.pixelHeight),x:Math.floor((m-c)/r.pixelWidth)}}return null},h=u(0,0),d=u(f-1,s-1),p={bottom:null==d?void 0:d.y,height:f,left:null==h?void 0:h.x,right:null==d?void 0:d.x,top:null==h?void 0:h.y,width:s};if(Object.values(p).every(isFinite))return Promise.all(this.georasters.map((function(t){return t.getValues(k(k({},p),{},{resampleMethod:r.resampleMethod||"bilinear"}))}))).then((function(t){return t.reduce((function(t,e){return t.concat(e)}),[])}));console.error("getRasters failed because not all values are finite:",p)},createTile:function(e,r){var n=t.DomUtil.create("canvas","leaflet-tile");n.style.boxSizing="content-box";var o=n.getContext("2d");return this.drawTile({tile:n,coords:e,context:o,done:r})},drawTile:function(e){var r=this,n=e.tile,o=e.coords,i=e.context,a=e.done;try{var s,f,l,c=this.debugLevel,u=void 0===c?0:c;u>=2&&console.log("starting drawTile with",{tile:n,coords:o,context:i,done:a});var h=o.z,d=[o.x,o.y,o.z].join(",");u>=2&&Z({cacheKey:d});var p=this.getMapCRS();u>=2&&Z({mapCRS:p});var g=U(p);u>=2&&Z({inSimpleCRS:g});var b=this.rasters,m=this.xmin,x=this.ymax,y=this.height,w=this.width,v=new A(this.getBounds(),{srs:g?"simple":4326});u>=2&&Z({extentOfLayer:v});var C=g?v.height/y:this.pixelHeight,E=g?v.width/w:this.pixelWidth;u>=2&&Z({pixelHeight:C,pixelWidth:E});var M=this.xMinOfLayer,D=this.xMaxOfLayer,R=this.yMinOfLayer,I=this.yMaxOfLayer,O=this._tileCoordsToBounds(o);u>=2&&Z({boundsOfTile:O});var k=p.code;u>=2&&Z({code:k});var S=new A(O,{srs:g?"simple":4326});u>=2&&Z({extentOfTile:S}),u>=4&&(this._cache.tile[d]||(this._cache.tile[d]=t.rectangle(S.leafletBounds,{fillOpacity:0}).addTo(this.getMap()).bindTooltip(d,{direction:"center",permanent:!0})));var B=g?S:S.reproj(k);u>=2&&Z({extentOfTileInMapCRS:B});var T=B.crop(g?v:this.extent);if(u>=2&&console.log("[georaster-layer-for-leaflet] extentOfInnerTileInMapCRS",T.reproj(g?"simple":4326)),u>=2&&Z({coords:o,extentOfInnerTileInMapCRS:T,extent:this.extent}),u>=4&&!this._cache.innerTile[d]){var j=g?T:T.reproj(4326);this._cache.innerTile[d]=t.rectangle(j.leafletBounds,{color:"#F00",dashArray:"5, 10",fillOpacity:0}).addTo(this.getMap())}var N=B.width/this.tileWidth,P=B.height/this.tileHeight;u>=3&&Z({heightOfScreenPixelInMapCRS:P,widthOfScreenPixelInMapCRS:N});var H=Math.sign((null==p||null===(s=p.transformation)||void 0===s?void 0:s._a)||1),X=Math.sign((null==p||null===(f=p.transformation)||void 0===f?void 0:f._c)||-1);u>=3&&Z({xScaleSignInMapCRS:H,yScaleSignInMapCRS:X});var J=H*N,Y=X*P;u>=3&&Z({xScaleOfScreenPixelInMapCRS:J,yScaleOfScreenPixelInMapCRS:Y});var W=G()({bbox:T.bbox,container:B.bbox,debug:u>=2,origin:[B.xmin,B.ymax],padding:[1,1],scale:[J,Y]});u>=3&&console.log("[georaster-layer-for-leaflet] extent of inner tile before snapping "+T.reproj(g?"simple":4326).bbox.toString()),T=new A(W.bbox_in_coordinate_system,{srs:g?"simple":k}),u>=3&&console.log("[georaster-layer-for-leaflet] extent of inner tile after snapping "+T.reproj(g?"simple":4326).bbox.toString());var K={left:Math.round((T.xmin-B.xmin)/N),right:Math.round((B.xmax-T.xmax)/N),top:Math.round((B.ymax-T.ymax)/P),bottom:Math.round((T.ymin-B.ymin)/P)};u>=3&&Z({padding:K});var V=this.tileHeight-K.top-K.bottom,q=this.tileWidth-K.left-K.right;u>=3&&Z({innerTileHeight:V,innerTileWidth:q});var z=B.xmin+K.left*N,_=B.ymin+K.bottom*P,$=T.xmax-K.right*N,tt=B.ymax-K.top*P;u>=4&&Z({xMinOfInnerTileInMapCRS:z,yMinOfInnerTileInMapCRS:_,xMaxOfInnerTileInMapCRS:$,yMaxOfInnerTileInMapCRS:tt}),n.style.paddingTop=K.top+"px",n.style.paddingRight=K.right+"px",n.style.paddingBottom=K.bottom+"px",n.style.paddingLeft=K.left+"px",n.height=V,n.style.height=V+"px",n.width=q,n.style.width=q+"px",u>=3&&console.log("setting tile height to "+V+"px");var et=0,rt=0;if(g)et=Math.ceil(T.width/E),rt=Math.ceil(T.height/C);else{var nt=T.reproj(this.projection);et=Math.ceil(nt.width/E),rt=Math.ceil(nt.height/C)}u>=4&&Z({rasterPixelsAcross:et,rasterPixelsDown:rt});var ot=this.options.resolution,it=V/this.tileHeight,at=q/this.tileWidth;u>=4&&Z({percentHeight:it,percentWidth:at});var st=Math.ceil(at*ot),ft=Math.ceil(it*ot);u>=4&&console.log({maxNumberOfSamplesAcross:st,maxNumberOfSamplesDown:ft});var lt=Math.min(st,3*et);u>=4&&console.log({resolution:ot,rasterPixelsAcross:et,numberOfSamplesAcross:lt});var ct=Math.min(ft,3*rt),ut=V/ct,ht=Math.ceil(ut),dt=q/lt,pt=Math.ceil(dt),gt=this.getMap(),bt=this.getTileSize(),mt=o.scaleBy(bt);u>=4&&Z({tileNwPoint:mt});var xt=mt.x+K.left,yt=mt.y+K.top,wt={x:xt,y:yt};return u>=4&&Z({innerTileTopLeftPoint:wt}),setTimeout(Q(regeneratorRuntime.mark((function e(){var o,s,f,c,u,d,p,v,A,G,Q,O,k;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,o=null,b){e.next=7;break}return e.next=5,r.getRasters({innerTileTopLeftPoint:wt,heightOfSampleInScreenPixels:ut,widthOfSampleInScreenPixels:dt,zoom:h,pixelHeight:C,pixelWidth:E,numberOfSamplesAcross:lt,numberOfSamplesDown:ct,ymax:x,xmin:m});case 5:if((o=e.sent)&&r.calcStats)for(s=r.noDataValue,f=0;f<o.length;f++){for(c=r.currentStats.mins[f],u=r.currentStats.maxs[f],d=o[f],p=0;p<d.length;p++)for(v=d[p],A=0;A<v.length;A++)(G=v[A])!==s&&((void 0===c||G<c)&&(c=G),(void 0===u||G>u)&&(u=G));r.currentStats.mins[f]=c,r.currentStats.maxs[f]=u,r.currentStats.ranges[f]=u-c}case 7:Q=function(e){var n=yt+(e+.5)*ut,s=t.point(xt,n),f=gt.unproject(s,h).lat;if(f>R&&f<I){var l=function(){var s=Math.round(e*ut),l=0;(g||r.projection===L)&&(l=Math.floor((I-f)/C));for(var c=function(c){var u=t.point(xt+(c+.5)*dt,n),d=gt.unproject(u,h).lng;if(d>M&&d<D){var p=0;if(g||r.projection===L)p=Math.floor((d-M)/E);else if(r.getProjector()){var v=r.getProjector().inverse({x:d,y:f}),A=v.y;if((l=Math.floor((x-A)/C))<0||l>=y)return"continue";var R=v.x;if((p=Math.floor((R-m)/E))<0||p>=w)return"continue"}var G=null;if(o)G=o.map((function(t){return t[e][c]}));else{if(!b)return a&&a(Error("no rasters are available for, so skipping value generation")),{v:{v:{v:void 0}}};G=b.map((function(t){return t[l][p]}))}var I=Math.round(c*dt),Q=s,O=pt,k=ht;if(r.options.customDrawFunction)r.options.customDrawFunction({values:G,context:i,x:I,y:Q,width:O,height:k,rasterX:p,rasterY:l,sampleX:c,sampleY:e,sampledRaster:o});else{var S=r.getColor(G);S&&i&&(i.fillStyle=S,i.fillRect(I,Q,O,k))}}},u=0;u<lt;u++){var d=c(u);if("continue"!==d&&"object"===F(d))return d.v}}();if("object"===F(l))return l.v}},O=0;case 9:if(!(O<ct)){e.next=16;break}if("object"!==F(k=Q(O))){e.next=13;break}return e.abrupt("return",k.v);case 13:O++,e.next=9;break;case 16:e.next=21;break;case 18:e.prev=18,e.t0=e.catch(0),l=e.t0;case 21:a&&a(l,n);case 22:case"end":return e.stop()}}),e,null,[[0,18]])}))),0),n}catch(l){a&&a(l,n)}},_initTile:function(e){t.DomUtil.addClass(e,"leaflet-tile"),e.onselectstart=t.Util.falseFn,e.onmousemove=t.Util.falseFn,t.Browser.ielt9&&this.options.opacity<1&&t.DomUtil.setOpacity(e,this.options.opacity),t.Browser.android&&!t.Browser.android23&&(e.style.WebkitBackfaceVisibility="hidden")},getBounds:function(){return this.initBounds(),this._bounds},getMap:function(){return this._map||this._mapToAdd},getMapCRS:function(){var e;return(null===(e=this.getMap())||void 0===e?void 0:e.options.crs)||t.CRS.EPSG3857},_tileCoordsToNwSe:function(t){var e=this.getMap(),r=this.getTileSize(),n=t.scaleBy(r),o=n.add(r);return[e.unproject(n,t.z),e.unproject(o,t.z)]},_tileCoordsToBounds:function(e){var r=B(this._tileCoordsToNwSe(e),2),n=r[0],o=r[1],i=new t.LatLngBounds(n,o);return this.options.noWrap||(i=this.getMap().options.crs.wrapLatLngBounds(i)),i},_isValidTile:function(e){var r=this.getMapCRS();if(!r.infinite){var n=this._globalTileRange;if(!r.wrapLng&&(e.x<n.min.x||e.x>n.max.x)||!r.wrapLat&&(e.y<n.min.y||e.y>n.max.y))return!1}var o=this.getBounds();if(!o)return!0;var i=e.x,a=e.y,s=e.z,f=new A(o,{srs:4326}),l=this._tileCoordsToBounds(e);if(f.overlaps(l))return!0;if(U(r))return!1;var c=Math.pow(2,s),u=t.point(i-c,a);u.z=s;var h=this._tileCoordsToBounds(u);if(f.overlaps(h))return!0;var d=t.point(i+c,a);d.z=s;var p=this._tileCoordsToBounds(d);return!!f.overlaps(p)},getColor:function(t){var e=this;if(this.options.pixelValuesToColorFn)return this.options.pixelValuesToColorFn(t);var r=t.length;if(t.every((function(t){return void 0!==t&&t!==e.noDataValue})))if(1==r){var n=t[0];if(this.palette){var o=B(this.palette[n],4),i=o[0],a=o[1],s=o[2],f=o[3];return"rgba(".concat(i,",").concat(a,",").concat(s,",").concat(f/255,")")}if(this.georasters[0].mins){var l=this.georasters[0],c=l.mins,u=l.ranges;return this.scale((t[0]-c[0])/u[0]).hex()}if(this.currentStats.mins){var h=this.currentStats.mins[0],d=this.currentStats.ranges[0];return this.scale((t[0]-h)/d).hex()}}else{if(2===r)return"rgb(".concat(t[0],",").concat(t[1],",0)");if(3===r)return"rgb(".concat(t[0],",").concat(t[1],",").concat(t[2],")");if(4===r)return"rgba(".concat(t[0],",").concat(t[1],",").concat(t[2],",").concat(t[3]/255,")")}},updateColors:function(t){var e=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{debugLevel:-1},n=r.debugLevel,o=void 0===n?-1:n;if(!t)throw new Error("Missing pixelValuesToColorFn function");-1===o&&(o=this.debugLevel),o>=1&&console.log("Start updating active tile pixel values"),this.options.pixelValuesToColorFn=t;var i=this.getActiveTiles();return i?(o>=1&&console.log("Active tiles fetched",i),i.forEach((function(t){var r=t.coords,n=t.el;e.drawTile({tile:n,coords:r,context:n.getContext("2d")})})),o>=1&&console.log("Finished updating active tile colours"),this):(console.error("No active tiles available"),this)},getTiles:function(){return Object.values(this._tiles)},getActiveTiles:function(){var t=this;return this.getTiles().filter((function(e){return t._isValidTile(e.coords)}))},isSupportedProjection:function(){if(void 0===this._isSupportedProjection){var t=this.projection;a()(t)||j.has(t)||"function"==typeof c()&&"EPSG:".concat(t)in c().defs||"function"==typeof proj4&&void 0!==proj4.defs&&"EPSG:".concat(t)in proj4.defs?this._isSupportedProjection=!0:this._isSupportedProjection=!1}return this._isSupportedProjection},getProjectionString:function(t){return a()(t)?f()(t):"EPSG:".concat(t)},initBounds:function(e){if(e||(e=this.options),!this._bounds){var r=this.debugLevel,n=this.height,o=this.width,i=this.projection,a=this.xmin,s=this.xmax,f=this.ymin,l=this.ymax;if(U(this.getMapCRS()))n===o?this._bounds=t.latLngBounds([H,[N,P]]):n>o?this._bounds=t.latLngBounds([H,[N,P/this.ratio]]):o>n&&(this._bounds=t.latLngBounds([H,[N*this.ratio,P]]));else if(i===L){r>=1&&console.log("georaster projection is in ".concat(L));var u=t.latLng(f,a),h=t.latLng(l,s);this._bounds=t.latLngBounds(u,h)}else{if(!this.getProjector())throw"function"!=typeof c()?"You are using the lite version of georaster-layer-for-leaflet, which does not support rasters with the projection ".concat(i,".  Please try using the default build or add the projection definition to your global proj4."):"GeoRasterLayer does not provide built-in support for rasters with the projection ".concat(i,".  Add the projection definition to your global proj4.");r>=1&&console.log("projection is UTM or supported by proj4");var d=this.getProjector().forward({x:a,y:f}),p=t.latLng(d.y,d.x),g=this.getProjector().forward({x:s,y:l}),b=t.latLng(g.y,g.x);this._bounds=t.latLngBounds(p,b)}this.xMinOfLayer=this._bounds.getWest(),this.xMaxOfLayer=this._bounds.getEast(),this.yMaxOfLayer=this._bounds.getNorth(),this.yMinOfLayer=this._bounds.getSouth(),e.bounds=this._bounds}},getProjector:function(){if(this.isSupportedProjection()){if(!c()&&!proj4)throw"proj4 must be found in the global scope in order to load a raster that uses this projection";if(!this._projector){var t,e=this.getProjectionString(this.projection);if(this.debugLevel>=1&&Z({projString:e}),e.startsWith("EPSG"))if("function"==typeof proj4&&"function"==typeof proj4.defs&&e in proj4.defs)t=proj4;else{if("function"!=typeof c()||"function"!=typeof c().defs||!(e in c().defs))throw"[georaster-layer-for-leaflet] projection not found in proj4 instance";t=c()}else if("function"==typeof proj4)t=proj4;else{if("function"!=typeof c())throw"[georaster-layer-for-leaflet] projection not found in proj4 instance";t=c()}this._projector=t(e,"EPSG:".concat(L)),this.debugLevel>=1&&console.log("projector set")}return this._projector}},same:function(t,e){return 1===new Set(t.map((function(t){return t[e]}))).size}});"object"===("undefined"==typeof window?"undefined":F(window))&&(window.GeoRasterLayer=X),"undefined"!=typeof self&&(self.GeoRasterLayer=X);const J=X})(),o.default})()}));
//# sourceMappingURL=georaster-layer-for-leaflet.lite.min.js.map